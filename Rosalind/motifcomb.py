#Finds motifs in a DNA sequence

def motifcomb(string, kmer):
	lenKmer = len(kmer)
	locations = []
	for i in range(len(string) - lenKmer):
		if kmer == string[i:i + lenKmer]:
			locations.append(i + 1)

	answer = ""
	for i in locations:
		answer += str(i) + " "

	return answer

string = "AGATAATAGGCTGGTATAATAGGTAATAGGGGATAATAGGGCGATCTAATAGGACTATAATAGGCTTATGCTAATAGGTAATAGGTGCCCCGTAATAGGATCCTAATAGGTAATAGGGTCTAATAGGGATTTCTAATAGGTAATAGGTAATAGGATTAATAGGTAATAGGTTCTAATAGGTAATAGGGTAATAGGAGTCTGTGTGACTAATAGGCTAATAGGTAATAGGTTCTAATAGGCTTAATAGGCTAATAGGCTAATAGGTAATAGGATATAATAGGGCGGGTAATAGGTATTAATAGGTTTAATAGGTCTAATAGGGATAATAGGTAATAGGGCTAATAGGGTAATAGGCTCGCTAATAGGCGTAATAGGGTAATAGGTAATAGGTAATAGGTAATAGGATTCTAATAGGTAATAGGCTGATAATAGGCTAATAGGGTAATAGGGTAATAGGTAATAGGTAGCTAATAGGCGGCTAATAGGGTAATAGGGTAATAGGGGTTAATAGGGCTAATAGGTAATAGGTTGGTTAATAGGTAATAGGGTAATAGGTAATAGGGCCATAACGTAATAGGGTCTAATAGGTCTAATAGGCATAATAGGTAATAGGTAATAGGTCCATAATAGGTAATAGGTAATAGGTAATAGGGTAATAGGCCTAATAGGAGGTAATAGGTAATAGGCAGAATAATAGGGTAATAGGGTTAATAGGGGTAATAGGTAATAGGGATAATAGGGGCCTAATAGGGCCTAATAGGTAATAGGTAATAGGCCGCTAATAGGTAATAGGGCCTTAATAGGTAACTTTAATAGGTGAGCTTAATAGGGGGGAGCCGTTAATAGGGGGTAATAGGAAAGAATTAATAGGTAATAGGCTAATAGGTTAATAGGCTAATAGGGGTAATAGGCTTAATAGGACTAATAGGGAATGAATAATAGGTTGCGTAATAGG"
kmer = 'TAATAGGTA'
print(motifcomb(string,kmer))