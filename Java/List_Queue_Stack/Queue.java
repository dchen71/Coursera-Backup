public class Queue<T> implements QueueInterface<T>, java.io.Serializable{  private DequeInterface deque;	public HW9_Queue()	{		deque = new LinkedDeque();	}	public void enqueue(T newEntry)	{        deque.addToBack(newEntry);	}	public T getFront()	{		return (T)deque.getFront();	}	public T dequeue()	{        return (T)deque.removeFront();	}	public boolean isEmpty()	{		return deque.isEmpty();	}	public void clear()	{		deque.clear();	}    public void splice(QueueInterface<T> anotherQueue)    {        QueueInterface<T> copyQueue = anotherQueue;        if(isEmpty())        {            while(!copyQueue.isEmpty())            {                enqueue(copyQueue.dequeue());            }        }        else if(!isEmpty())        {            while(!copyQueue.isEmpty())            {                enqueue(copyQueue.dequeue());            }        }    }}