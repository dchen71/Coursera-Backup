public interface EntryWayListInterface<T>{  /** Task: Adds a new entry to the first member of the list.   *  @param newEntry - the object to be added as a new entry   *  @return true if newEntry added to the head of the list otherwise false if unable to */  public boolean insertHead(T newEntry);  /** Task: Adds a new entry at the tail end of the list   *  @param newEntry - the object to be added to the end of the list   *  @return true if newEntry added to the tail end of the list otherwise false if unable to */  public boolean insertTail(T newEntry);  /** Task: Deletes the 1st member of the list  *   @return returns the object that you had deleted from the list */  public T deleteHead();  /** Task: Deletes the tail end of the list  *   @return returns the object that you had deleted from the list */  public T deleteTail();  /** Task: Displays the entries in the list */  public void display();  /** Task: Sees whether the list contains a given entry.   *  @param anEntry - the object that will be checked against the list   *  @return returns position where anEntry was found */  public int contains(T anEntry);  /** Task: Checks if the list is empty   *  @return true if list is empty, otherwise false */  public boolean isEmpty();  /** Task: Checks if the list is full   *  @return true if list is full, otherwise false */  public boolean isFull();}